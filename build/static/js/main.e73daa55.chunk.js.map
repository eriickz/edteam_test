{"version":3,"sources":["controller.js","components/CourseForm.js","components/CoursesList.js","routes.js","components/App.js","index.js"],"names":["getCoursesList","a","axios","get","then","res","response","status","message","data","getCourseById","courseId","createCourse","post","updateCourse","put","deleteCourse","delete","CourseForm","useState","course","setCourse","isUpdateForm","setIsUpdateForm","isSucceded","setIsSucceded","useParams","useEffect","undefined","title","poster","description","price","Ctrl","setData","event","type","persist","Object","assign","dataType","target","id","value","checked","className","to","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","defaultValue","onChange","required","min","step","Check","label","Button","variant","onClick","Swal","fire","text","icon","showCancelButton","cancelButtonText","confirmButtonColor","confirmButtonText","result","isConfirmed","CousersList","courses","setCourses","Table","hover","map","index","courseIndex","coursesBeforeIndex","slice","coursesAfterIndex","concat","routes","path","exact","component","CoursesList","App","appRoutes","route","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73daa55.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getCoursesList = async () => {\n    try {\n        const response = await axios.get(\"/courses\").then(res => res);\n        \n        if ( response.status === 200 ) {\n            return response;\n        }\n    } catch (e) {\n        const message = `Error ${e.response.status}: ${e.response.data.message}`;\n        return message;\n    }\n}\n\nexport const getCourseById = async (courseId) => {\n    try {\n        const response = await axios.get(`/courses/${courseId}`).then(res => res);\n        \n        return response;\n    } catch (e) {\n        const message = `Error ${e.response.status}: ${e.response.data.message}`;\n        return message;\n    }\n}\n\nexport const createCourse = async (data) => {\n    try {\n        const response = await axios.post(\"/courses\", { ...data }).then(res => res);\n        \n        return response;\n    } catch (e) {\n        const message = `Error ${e.response.status}: ${e.response.data.message}`;\n        return message;\n    }\n}\n\nexport const updateCourse = async (courseId, data) => {\n    try {\n        const response = await axios.put(`/courses/${courseId}`, { ...data }).then(res => res);\n        \n        return response;\n    } catch (e) {\n        const message = `Error ${e.response.status}: ${e.response.data.message}`;\n        return message;\n    }\n}\n\nexport const deleteCourse = async (courseId) => {\n    try {\n        const response = await axios.delete(`/courses/${courseId}`).then(res => res);\n        \n        return response;\n    } catch (e) {\n        const message = `Error ${e.response.status}: ${e.response.data.message}`;\n        return message;\n    }\n}","import { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\n\nimport * as Ctrl from '../controller';\n\nfunction CourseForm() {\n    const [course, setCourse] = useState({});\n    const [isUpdateForm, setIsUpdateForm] = useState(false);\n    const [isSucceded, setIsSucceded] = useState(false);\n\n    //URL Param\n    const { courseId } = useParams();\n\n    useEffect(() => {\n        if ( courseId === undefined ) {\n            setCourse({\n                title: '',\n                poster: '',\n                description: '',\n                price: '',\n                status: false,\n            });\n        } else {\n            Ctrl.getCourseById(courseId).then(res => {\n                if ( res.status === 200 ) {\n                    setCourse(res.data);\n                    setIsUpdateForm(true);\n                }\n            })\n        }\n    }, [courseId]);\n\n    const setData = (event, type = '') => {\n        event.persist();\n\n        const data = Object.assign({}, course),\n            dataType = type || event.target.id,\n            value = (type !== 'status') ? event.target.value : event.target.checked;\n\n        data[dataType] = value;\n\n        setCourse(data);\n    }\n\n    const createCourse = event => {\n        event.preventDefault();\n        \n        Ctrl.createCourse(course).then(res => {\n            if ( res.status === 201 ) {\n                setIsSucceded(true);\n            }\n        })\n    }\n    \n    const updateCourse = event => {\n        event.preventDefault();\n\n        Ctrl.updateCourse(courseId, course).then(res => {\n            if ( res.status === 200 ) {\n                setIsSucceded(true)\n            }\n        })\n    }\n\n    const deleteCourse = () => {\n        Swal.fire({\n        title: 'Eliminar Curso',\n        text: 'Â¿Estas seguro que deseas eliminar este curso?',\n        icon: 'warning',\n        showCancelButton: true,\n        cancelButtonText: 'Cancelar',\n        confirmButtonColor: '#d33',\n        confirmButtonText: 'Eliminar Curso',\n        }).then(result => {\n            if ( result.isConfirmed ) {\n                Ctrl.deleteCourse(courseId).then(res => {\n                if ( res.status === 200 ) {\n                    Swal.fire('Eliminado', 'El curso ha sido eliminado con Ã©xito.', 'success');\n\n                    setIsSucceded(true);\n                }\n                })\n            }\n        })\n    }\n\n    return(\n        <div className=\"container\">\n            {isSucceded && (\n                <Redirect to=\"/cursos\" />\n            )}\n            <Form onSubmit={e => (isUpdateForm) ? updateCourse(e) : createCourse(e)}>\n                <h1 className=\"text-center mt-5 mb-3\">{(isUpdateForm) ? 'Editar Curso' : 'Nuevo Curso'}</h1>\n                <Form.Group controlId=\"title\">\n                    <Form.Label>Nombre del Curso</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Escriba un nombre\" defaultValue={course.title} onChange={setData} required />\n                </Form.Group>\n                <Form.Group controlId=\"poster\">\n                    <Form.Label>PÃ³ster (URL)</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Escriba el pÃ³ster\" defaultValue={course.poster} onChange={setData} required />\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>DescripciÃ³n</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Escriba un nombre\" defaultValue={course.description} onChange={setData} required />\n                </Form.Group>\n                <Form.Group controlId=\"price\">\n                    <Form.Label>Precio</Form.Label>\n                    <Form.Control type=\"number\" min=\"0\" placeholder=\"0\" step=\".01\" defaultValue={course.price} onChange={setData} required />\n                </Form.Group>\n\n                <Form.Check label=\"Â¿El curso esta disponible?\" checked={course.status} onChange={e => setData(e, 'status')}></Form.Check>\n\n                <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">Guardar Datos</Button>\n\n                {isUpdateForm && (\n                    <Button variant=\"danger\" className=\"mt-3 ml-2\" onClick={deleteCourse} >Eliminar Curso</Button>\n                )}\n            </Form>\n        </div>   \n    )\n}\n\nexport default CourseForm;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from 'react-bootstrap'\nimport Swal from 'sweetalert2';\n\nimport * as Ctrl from '../controller';\n\nfunction CousersList() {\n  const [courses, setCourses] = useState([]);\n\n  useEffect(() => {\n    Ctrl.getCoursesList().then(res => {\n      setCourses(res.data);\n    })\n  }, []);\n\n  const deleteCourse = (courseId, courseIndex) => {\n    Swal.fire({\n      title: 'Eliminar Curso',\n      text: 'Â¿Estas seguro que deseas eliminar este curso?',\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancelar',\n      confirmButtonColor: '#d33',\n      confirmButtonText: 'Eliminar Curso',\n    }).then(result => {\n      if ( result.isConfirmed ) {\n        Ctrl.deleteCourse(courseId).then(res => {\n          if ( res.status === 200 ) {\n            Swal.fire('Eliminado', 'El curso ha sido eliminado con Ã©xito.', 'success');\n\n            const coursesBeforeIndex = courses.slice(0, courseIndex);\n            const coursesAfterIndex = courses.slice(courseIndex + 1);\n\n            setCourses(coursesBeforeIndex.concat(coursesAfterIndex));\n          }\n        })\n      }\n    })\n  }\n  \n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center mt-5 mb-4\">Listado de Cursos</h1>\n      <Table hover>\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>PÃ³ster</th>\n              <th>DescripciÃ³n</th>\n              <th>Precio</th>\n              <th>Disponible</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n              {courses.map((course, index) => (\n                <tr key={course.id}>\n                  <td>{course.title}</td>\n                  <td>{course.poster}</td>\n                  <td>{course.description}</td>\n                  <td>{`$${course.price}`}</td>\n                  <td>{(course.status) ? 'Si' : 'No'}</td>\n                  <td>\n                    <Link to={`/cursos/${course.id}`} className=\"btn btn-success\">Editar</Link>\n                    <Button variant=\"danger\" className=\"ml-2\" onClick={() => deleteCourse(course.id, index)} >Eliminar</Button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        <Link to=\"/cursos/nuevo\" className=\"btn btn-primary mt-2\" >AÃ±adir Curso</Link>\n      </Table>\n    </div>\n  );\n}\n\nexport default CousersList;\n","import CourseForm from \"./components/CourseForm\";\nimport CoursesList from \"./components/CoursesList\";\n\nconst routes = [\n    { path: '/', exact: true, component: CoursesList },\n    { path: '/cursos', exact: true, component: CoursesList },\n    { path: '/cursos/nuevo', exact: true, component: CourseForm },\n    { path: '/cursos/:courseId', exact: true, component: CourseForm },\n];\n\nexport default routes;","import { Switch, Route } from 'react-router-dom';\nimport routes from '../routes';\n\nfunction App() {\n    const appRoutes = routes.map(( route, index ) => (\n        <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            render={props => (\n                <route.component {...props} />\n            )} />\n    ));\n\n    return(\n        <Switch>\n            {appRoutes}\n        </Switch>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/styles.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}